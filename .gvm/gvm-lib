#!/usr/bin/env bash

GHC_DEFAULT_VERSION=system
GHC_VERSIONS=(system)

get_ghc_versions() {
	local soft=$(ls $HOME/Software | grep "^ghc-" | sed "s/^ghc-//")
	GHC_VERSIONS=(system $soft)
}

get_ghc_version() {
	if [ -n "${GHC}" ]; then
		GHC_VERSION=${GHC}
	elif [ -z "${GHC_VERSION}" ]; then
		GHC_VERSION=${GHC_DEFAULT_VERSION}
		GHC_VERSION=`cat $HOME/.gvm/current-ghc | head -1`
	fi
}

list_ghc_versions() {
	get_ghc_versions
	get_ghc_version
	echo "GHC Versions:"; echo
	for v in ${GHC_VERSIONS[@]}
	do
		local arch=$( run_ghc_version $v ghc '--info' | grep "Target platform" | cut -d, -f3 | sed "s/[\"\)]//g")
		local vers=$( run_ghc_version $v ghc '--info' | grep "Project version" | cut -d, -f3 | sed "s/[\"\)]//g")
		if [ "$GHC_VERSION" = "$v" ]; then
			printf "=> ghc-%-12s %-18s %s\n" $v "[$vers]" "[$arch]"
		else
			printf "   ghc-%-12s %-18s %s\n" $v "[$vers]" "[$arch]"
		fi
	done
	echo
}

set_ghc_version() {
	get_ghc_versions
	ver=$1
	nov=1
	for v in ${GHC_VERSIONS[@]}
	do
		if [ "$ver" = "$v" ]; then
			nov=0
		elif [ "$ver" = "ghc-$v" ]; then
			nov=0
			ver=$v
		fi
	done
	if [ "$nov" = "1" ]; then
		echo "ERROR: Not  aware of such a GHC version: $ver"
	else
		echo "$ver" > $HOME/.gvm/current-ghc
		echo "Using ghc-$ver"
	fi
}

run_ghc_program() {
	get_ghc_version
	run_ghc_version $GHC_VERSION $@
}

run_ghc_version() {
	local ver=$1
	local prog=$2
	shift 2
	local args=$@
	
	if [ "$ver" = "system" ]; then
		/usr/bin/$prog $args
	else
		$HOME/Software/ghc-$ver/bin/$prog $args
	fi
}


# Common Alias defenition file.
# Designed so it can be shared among different computers and shells
#
# Author: David Terei

# enable color support of ls and also add handy aliases
if [ "$TERM" != "dumb" ]; then
	export LSCOLORS="Gxfxcxdxbxegedabagacad"
	if command -v dircolors &>/dev/null; then
		eval "`dircolors -b`" &>/dev/null
	fi

	# try to accomodate for different ls
	if ls --color -d . &>/dev/null 2>&1; then
		alias ls='ls --color=auto'
	elif colorls -G . &>/dev/null 2>&1; then
		alias ls='colorls -G'
	elif ls -G . &>/dev/null 2>&1; then
		alias ls='ls -G'
	fi
fi

# reload profile
alias rlp='source ~/.profile'

# some more ls aliases
alias dir='ls --format=vertical'
alias vdir='ls --format=long'
alias ll='ls -l'
alias la='ls -A'
alias l='ls -CF'

# cd aliases
alias cd..='cd ..'
alias .='pwd'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias ~='cd ~'
alias -- -='cd -'

# Push and pop directories on directory stack
alias pu='pushd'
alias po='popd'
alias d='dirs -v'

#make,remove dir
alias md='mkdir -p'
alias rd=rmdir
function take() {
  mkdir -p $1
  cd $1
}

# Super user
alias _='sudo'
alias ss='sudo su -'
alias _g='gksu'

# app aliases
alias g='git'
alias m='mutt'
alias v='vim'
alias ds='darcs'

# have xclip use gtk clipboard
alias xclip='xclip -sel clip'

# turn on some good! regular expression by default
if echo "a" | sed -r "s/a//" &>/dev/null; then
	alias sed='sed -r'
elif echo "a" | sed -E "s/a//" &>/dev/null; then
	alias sed='sed -E'
fi

alias grep='grep -E'

# create alias thats kind of like wget using curl if wget isn't present
if command -v wget &>/dev/null; then
	echo h > /dev/null
else
	if command -v curl &>/dev/null; then
		function wget() {
			file=`echo $1 | sed -e 's/.*\///'`
			curl -X GET $1 > $file
		}
	fi
fi

# nice function for easy text searching in files
function fsearch() {
	find * -iname "$1" | xargs egrep "$2";
}

function frsearch() {
	find * -regextype posix-extended -regex ".*$1" | xargs egrep "$2";
}

function hsf() {
	find * -regextype posix-extended -regex "[^_].*.(c|h|cmm|l?hs|x|y|pp)" |\
	grep -v "_darcs" |\
	xargs egrep "`echo $1 | sed -e 's/ /\\\s\+/'`";
}

function lmf() {
	find * -regextype posix-extended -regex ".*.(c|h|cpp|td|cxx|inc)" |\
	xargs egrep "`echo $1 | sed -e 's/ /\\\s\+/'`";
}

alias delay=sleep

# nice pause function (equivalent of DOS pause)
function pause() {
	if [ -n "${BASH_VERSION}" ]; then
		read -n1 -r -p "Press any key to continue..." key;
		if [ -n "$key" ]; then
			echo "";
		fi
	elif [ -n "${ZSH_VERSION}" ]; then
		read -k "?Press any key to continue..." key;
		echo "";
	fi
}

# display broken sym links
function find_bad_syms() {
	for f in $(find $1 -type l); do
		if [ ! -e "$f" ]; then
			echo "$f";
		fi;
	done;
}

# remove broken sym links
function rm_bad_syms() {
	find $1 -type l |\
		while read f; do
			if [ ! -e "$f" ]; then
				echo "rm $f...";
				rm -f "$f";
			fi;
		done;
}

# Git
alias g='git'
alias gg='git log'
alias ggp='git log -p'
alias gcount='git shortlog -sn'
alias gz='git status -s'
alias gd='git diff | less'
alias gl='git pull'
alias gup='git pull --rebase'
alias gp='git push'
alias gc='git commit -v'
alias gca='git commit -v -a'
alias gb='git branch'
alias go='git checkout'
alias ga='git add'

#json pretty print
alias jsonp='python -mjson.tool'

# Github
function hub () {
	if [[ $1 == "clone" && $2 != "" ]]; then
		git clone "git@github.com:dterei/$2.git" $3
	elif [[ $1 == "repos" ]]; then
		curl -s http://github.com/api/v2/json/repos/show/dterei | jsonp | grep name
	elif [[ $1 == "list" ]]; then
		curl -s http://github.com/api/v2/json/repos/show/dterei | jsonp
	elif [[ $1 == "" || $1 == "-h" || $1 == "--help" ]]; then
		echo "Usage: \tclone <repo>\t -- Clones the repository \
				\n\trepos\t\t -- List my repositories \
				\n\tlist\t\t -- List (detailed) information on all my repositories"
	fi
}

# Darcs
alias z='darcs'
alias zs='darcs whatsnew -s'
alias zd='darcs whatsnew | less'
alias zl='darcs pull'
alias zla='darcs pull -a'
alias zp='darcs push'
alias zc='darcs record'
alias zz='darcs changes | less'
alias zzv='darcs changes --verbose | less'
alias za='darcs add'
alias ze='darcs send'
alias zg='darcs get'
alias zo='darcs obliterate'

# Ghc
alias dghc='$GHCDEVBIN'
alias dghc1='$GHCDEV/ghc-stage1'
alias dghcc='$GHCDEVBIN -fllvm -fforce-recomp -fglasgow-exts -keep-tmp-files'
alias dghccn='$GHCDEVBIN -fnew-codegen -fllvm -fforce-recomp -fglasgow-exts -keep-tmp-files'
alias dghcc1='$GHCDEV/ghc-stage1 -fllvm -fforce-recomp -fglasgow-exts -keep-tmp-files'

alias vghc='vim -p $TMPDIR/ghc*/*.ll(u{`whoami`})'

function hsclean() {
	find $TMPDIR/ghc* -user `whoami` -delete
	rm $GHCHOME/*.hi
	rm $GHCHOME/*.o
	find $GHCHOME/ -maxdepth 1 -executable -type f -delete
}

alias dghc_config='runhaskell Setup configure --with-ghc=$GHCDEVBIN --with-ghc-pkg=$GHCDEVPKG'
alias dghc_build='runhaskell Setup build'
alias dghc_reg='runhaskell Setup register --inplace'
alias dghc_pkg='dghc_config && dghc_build && dghc_reg'

# Aptitude
alias ap='sudo aptitude'
alias api='sudo aptitude install'
alias apu='sudo aptitude update'
alias apg='sudo aptitude full-upgrade'
alias apz='sudo aptitude search'
alias apc='sudo aptitude changelog'
alias aps='sudo aptitude show'

# sync all my Settings
alias sync_all='pushd ~/Settings && gl && gp && pushd ~/Vim && gl && gp && pushd ~/Scraps && gl && gp && popd && popd && popd'
alias check_all='pushd ~/Settings && echo "Settings" && gz && pushd ~/Vim && echo "Vim" && gz && pushd ~/Scraps && echo "Scraps" && gz && popd && popd && popd'

